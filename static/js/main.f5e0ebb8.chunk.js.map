{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list-main/index.js","components/todo-list-main/todo-list-main.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/clock/clock.js","components/app/index.js","components/toggle-button/toggle-button.js","components/agreement/agreement.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoListMain","todos","element","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAddedItem","React","App","maxId","todoData","createToDoItem","AddItem","text","createNewItem","deleteItem","idx","findIndex","el","slice","toggleProperty","items","arr","propName","oldItem","newItem","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5e0ebb8.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React from \"react\";\r\n\r\nconst AppHeader = ({toDo, done}) =>{\r\n    return(\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    state ={\r\n        term: ''\r\n    };\r\n    onSearchChange =(e) =>{\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"type to search\"\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n};\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\nexport default ItemStatusFilter;","import React, {Component} from \"react\";\r\n\r\nimport \"./item-status-filter.css\"\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n    buttons =[\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n    render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label})=>{\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return(\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={()=> onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            );\r\n\r\n        });\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoListItem from \"./todo-list-item\";\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem =({label,\r\n                      onDeleted,\r\n                      onToggleImportant,\r\n                      onToggleDone,\r\n                      important,\r\n                      done}) => {\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n\r\n        {label}\r\n      </span>\r\n\r\n        <span className=\"todo-list-item-button\">\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm\"\r\n              onClick={onToggleImportant}>\r\n      <i className=\"bi bi-exclamation-circle\"></i>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm \"\r\n               onClick={onDeleted}>\r\n        <i className=\"bi bi-trash\"></i>\r\n      </button>\r\n        </span>\r\n    </span>\r\n        );\r\n\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoListMain from \"./todo-list-main\";\r\nexport default TodoListMain;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\n\r\nimport \"./todo-list-main.css\";\r\n\r\n\r\nconst TodoListMain = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n    const element = todos.map((item) => {\r\n        const { id, ...itemProps} = item;\r\n            return (\r\n                <li key={id} className=\"list-group-item\">\r\n                    <TodoListItem\r\n                        {...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={()=> onToggleImportant(id)}\r\n                    onToggleDone={()=> onToggleDone(id)}\r\n                    />\r\n\r\n                </li>\r\n            )\r\n        })\r\n    ;\r\n    return (\r\n        <ul className=\"list-group todo-list\">{element}</ul>\r\n    );\r\n\r\n};\r\nexport default TodoListMain;","import ItemAddForm from \"./item-add-form\";\r\nexport default ItemAddForm;","import React from \"react\";\r\n\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class ItemAddForm extends React.Component{\r\n    state ={\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) =>{\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.onAddedItem(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return(\r\n            <form className=\"item-add-form d-flex\"\r\n                            onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\"\r\n                        value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\"\r\n\r\n                >\r\n                    Add\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./clock.css\";\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    };\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"clock-location\"> {this.state.date.toLocaleTimeString()}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import App from \"./app\";\r\nexport default App;","import React, {Component} from \"react\";\r\n\r\nimport \"./toggle-button.css\"\r\nexport default class ToggleButton extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isToggleOn: true,\r\n            count: 0\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.handleClick3 = this.handleClick3.bind(this);\r\n    }\r\n    handleClick(){\r\n        this.setState(prevState =>({\r\n           isToggleOn: !prevState.isToggleOn\r\n        }));\r\n    }\r\n    handleClick2 ()  {\r\n        this.setState({\r\n            count: this.state.count - 1\r\n        });\r\n    }\r\n    handleClick3 ()  {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <button onClick={this.handleClick}>\r\n                {this.state.isToggleOn ?  \"On\" : \"Off\"}\r\n            </button>\r\n                <br />\r\n                <div className=\"d-flex toggle-btn-style\">\r\n            <button\r\n                className=\"btn btn-info \"\r\n                onClick={this.handleClick2}>-</button>\r\n                <p className=\"toggle-btn-style\">{this.state.count}</p>\r\n             <button\r\n                 className=\"btn btn-info \"\r\n                 onClick={this.handleClick3}>+</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};","import React, {Component} from \"react\";\r\nimport \"./agreement.css\";\r\n\r\nexport default class Agreement extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            isAgreeWithTerms: false,\r\n        };\r\n        this.emailRef = React.createRef();\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n    handleCheckbox  = (event) => {\r\n        this.setState({ isAgreeWithTerms: event.target.checked });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    validateSubmit = () => {\r\n        const isValidEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n            this.state.email.toLocaleLowerCase()\r\n        );\r\n\r\n        const isValidCheckBox = this.state.isAgreeWithTerms;\r\n\r\n\r\n        if (!isValidEmail) {\r\n            alert('Your email is not valid');\r\n            return;\r\n        }\r\n        if(!isValidCheckBox){\r\n            alert('You should accept all terms and conditions');\r\n            return;\r\n        }\r\n        this.setState({\r\n            email: '',\r\n            isAgreeWithTerms: false\r\n        });\r\n        alert('Thank you for subscription!');\r\n    };\r\n\r\n\r\n    render() {\r\n        const {email, isAgreeWithTerms} = this.state;\r\n        return (\r\n            <form onSubmit={this.validateSubmit} className=\"d-flex-column\">\r\n                <label>\r\n                    Email:\r\n                    <input className=\"elem\" type=\"email\"\r\n                           placeholder=\"Ivan325@gmail.com\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={this.handleChange}\r\n                           ref={this.emailRef}\r\n                          />\r\n                </label>\r\n                <label>\r\n                    I agree with terms and conditions\r\n                    <input className=\"elem\"\r\n                           type=\"checkbox\"\r\n                            name='isAgreeWithTerms'\r\n                           checked={isAgreeWithTerms}\r\n                           onChange={this.handleCheckbox}\r\n                    />\r\n                </label>\r\n                <button className=\"elem \">Send</button>\r\n            </form>\r\n        );\r\n    };\r\n};","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport TodoListMain from \"../todo-list-main\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport Clock from \"../clock\";\r\nimport ToggleButton from \"../toggle-button\";\r\nimport Agreement from \"../agreement/agreement\";\r\n\r\nimport \"./app.css\";\r\n\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createToDoItem('Drink Coffee'),\r\n            this.createToDoItem('Make Awesome App'),\r\n            this.createToDoItem('Have a lunch'),\r\n\r\n        ],\r\n        term: '',\r\n        filter: 'all' // active, all, done\r\n    };\r\n\r\n\r\n\r\n\r\n    createToDoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n\r\n        };\r\n    };\r\n\r\n    AddItem = (text) => {\r\n        this.setState(({todoData}) => {\r\n            const createNewItem = this.createToDoItem(text);\r\n            const newItem = [\r\n                ...todoData,\r\n                createNewItem\r\n            ];\r\n            return {\r\n                todoData: newItem\r\n            };\r\n        });\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)];\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n\r\n            };\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n\r\n        });\r\n    };\r\n\r\n    onFilterChange =(filter) =>{\r\n        this.setState({filter});\r\n    };\r\n\r\n    search(items, term) {\r\n        if(term.length === 0){\r\n            return items;\r\n        }\r\n        return items.filter((item)=>{\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onSearchChange =(term) =>{\r\n        this.setState({term});\r\n    };\r\n    filter = (items, filter) =>{\r\n        switch (filter){\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item)=> !item.done);\r\n            case 'done':\r\n                return items.filter((item)=> item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n\r\n        const visibleItems = this.filter(\r\n        this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo__app\">\r\n                <div className=\"todo__tasks\">\r\n                    <AppHeader toDo={todoCount} done={doneCount}/>\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel onSearchChange ={this.onSearchChange}/>\r\n                        <ItemStatusFilter filter={filter}\r\n                        onFilterChange={this.onFilterChange}/>\r\n                    </div>\r\n                    <TodoListMain todos={visibleItems}\r\n                                  onDeleted={this.deleteItem}\r\n                                  onToggleImportant={this.onToggleImportant}\r\n                                  onToggleDone={this.onToggleDone}\r\n                    />\r\n                    <ItemAddForm onAddedItem={this.AddItem}/>\r\n                    {/*< Clock/>*/}\r\n\r\n                    {/*<Agreement />*/}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));"],"sourceRoot":""}